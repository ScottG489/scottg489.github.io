{"version":3,"file":"component---src-templates-project-tags-tsx-59c3d52821b6e4e307b5.js","mappings":"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","sources":["webpack://scottg489.github.io/./src/templates/project-tags.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\nimport { ProjectCard } from '../components/ProjectCard';\nimport type { ProjectContext } from './projects';\n\ntype TagTemplateProps = {\n  location: Location;\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          yamlId: string;\n          description: string;\n          layout: string;\n          image?: any;\n        };\n      }>;\n    };\n    projects: {\n      edges: Array<{\n        node: ProjectContext;\n      }>;\n    };\n  };\n};\n\nfunction Tags({ pageContext, data, location }: TagTemplateProps) {\n  const tag = pageContext.tag ? pageContext.tag : '';\n  const { edges } = data.projects;\n  const totalCount = edges.length;\n  const tagData = data.allTagYaml.edges.find(n => n.node.yamlId.toLowerCase() === tag.toLowerCase());\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta name='description' content={tagData?.node ? tagData.node.description : ''} />\n        <meta property='og:site_name' content={config.title} />\n        <meta property='og:type' content='website' />\n        <meta property='og:title' content={`${tag} - ${config.title}`} />\n        <meta property='og:url' content={config.siteUrl + location.pathname} />\n        {config.facebook && <meta property='article:publisher' content={config.facebook} />}\n        <meta name='twitter:card' content='summary_large_image' />\n        <meta name='twitter:title' content={`${tag} - ${config.title}`} />\n        <meta name='twitter:url' content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name='twitter:site'\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header className='site-archive-header' css={[SiteHeader, SiteArchiveHeader]} >\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <ResponsiveHeaderBackground\n            css={[outer, SiteHeaderBackground]}\n            backgroundImage={getSrc(tagData?.node?.image)}\n            className='site-header-background'\n          >\n            <SiteHeaderContent css={inner} className='site-header-content'>\n              <SiteTitle className='site-title'>{tag}</SiteTitle>\n              <SiteDescription className='site-description'>\n                {tagData?.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} projects`}\n                    {totalCount === 1 && '1 project'}\n                    {totalCount === 0 && 'No projects'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id='site-main' css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <ProjectCard key={node.title} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allTagYaml {\n      edges {\n        node {\n          yamlId\n          description\n        }\n      }\n    }\n    projects: allProjectsYaml(\n      filter: { tags: { in: [$tag] } }\n     ) {\n      edges {\n        node {\n          title\n          link\n          ghimage\n          excerpt\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","data","location","tag","edges","projects","totalCount","length","tagData","allTagYaml","find","n","node","yamlId","toLowerCase","___EmotionJSX","IndexLayout","Helmet","lang","config","name","content","description","property","pathname","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","SiteHeaderBackground","backgroundImage","getSrc","_tagData$node","image","SiteHeaderContent","SiteTitle","SiteDescription","id","SiteMain","PostFeed","map","ProjectCard","key","title","post","Footer"],"sourceRoot":""}