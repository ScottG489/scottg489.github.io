{"version":3,"file":"component---src-templates-projects-tsx-ca640483cf839446667c.js","mappings":"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","sources":["webpack://scottg489.github.io/./src/components/Pagination.tsx","webpack://scottg489.github.io/./src/templates/projects.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/react';\n\nimport { colors } from '../styles/colors';\n\nexport type PaginationProps = {\n  currentPage: number;\n  numPages: number;\n};\n\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\n  const nextPage = `../${(currentPage + 1).toString()}`;\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel='prev'>\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            className={i + 1 === currentPage ? 'active' : ''}\n            to={`/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel='next'>\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color 0.3s;\n    border: 2px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport { getImage, getSrc } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteHeader,\n  SiteMain,\n} from '../styles/shared';\nimport config from '../website-config';\nimport type { PageContext } from './post';\nimport { HomeFullHeader, HomeFullTitle } from './post';\nimport { ProjectCard } from '../components/ProjectCard';\n\nexport type ProjectsProps = {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: any;\n    header: any;\n    posts: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    projects: {\n      edges: Array<{\n        node: ProjectContext;\n      }>;\n    };\n  };\n};\n\nexport type ProjectContext = {\n  title: string;\n  post: string;\n  large: boolean;\n  link: string;\n  ghimage: string;\n  excerpt: string;\n  tags: string[];\n};\n\nfunction ProjectsPage({ data, pageContext }: ProjectsProps) {\n  const width = getImage(data.header)?.width;\n  const height = getImage(data.header)?.height;\n  const projects = data.projects.edges;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name='description' content={config.description} />\n        <meta property='og:site_name' content={config.title} />\n        <meta property='og:type' content='website' />\n        <meta property='og:title' content={config.title} />\n        <meta property='og:description' content={config.description} />\n        <meta property='og:url' content={config.siteUrl} />\n        <meta property='og:image' content={`${config.siteUrl}${getSrc(data.header)}`} />\n        {config.facebook && <meta property='article:publisher' content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name='google-site-verification' content={config.googleSiteVerification} />\n        )}\n        <meta name='twitter:card' content='summary_large_image' />\n        <meta name='twitter:title' content={config.title} />\n        <meta name='twitter:description' content={config.description} />\n        <meta name='twitter:url' content={config.siteUrl} />\n        <meta name='twitter:image' content={`${config.siteUrl}${getSrc(data.header)}`} />\n        {config.twitter && (\n          <meta\n            name='twitter:site'\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property='og:image:width' content={width?.toString()} />\n        <meta property='og:image:height' content={height?.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader]}\n          className='site-header-background'\n          style={{\n            backgroundImage: `url('${getSrc(data.header)}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteNav />\n          </div>\n        </div>\n        <main id='site-main' css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <HomeFullHeader className='post-full-header'>\n              <HomeFullTitle className='post-full-title'>Projects</HomeFullTitle>\n            </HomeFullHeader>\n            <div css={[PostFeed]}>\n              {projects.map(project => (<ProjectCard key={project.node.title} post={project.node} />))}\n            </div>\n          </div>\n        </main>\n        {pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={pageContext.currentPage}\n            numPages={pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query projectsPageQuery {\n    logo: file(relativePath: { eq: \"img/scott-logo.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FIXED)\n      }\n    }\n    header: file(relativePath: { eq: \"posts/img/blog-cover.png\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 2000, quality: 100, layout: FIXED)\n      }\n    }\n    projects: allProjectsYaml {\n      edges {\n        node {\n          title\n          link\n          ghimage\n          excerpt\n          tags\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin: 15px 40px 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default ProjectsPage;\n"],"names":["navCss","css","darken","colors","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","___EmotionJSX","Link","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","name","styles","data","pageContext","width","getImage","header","_getImage","height","_getImage2","projects","edges","IndexLayout","Helmet","lang","config","content","property","getSrc","Wrapper","outer","SiteHeader","style","backgroundImage","inner","SiteNav","id","SiteMain","Posts","HomeFullHeader","HomeFullTitle","PostFeed","map","project","ProjectCard","node","title","post","Pagination","Footer"],"sourceRoot":""}