{"version":3,"file":"e0525e89-c71f46ea16d7d345e904.js","mappings":"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","sources":["webpack://scottg489.github.io/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nimport { Disqus } from 'gatsby-plugin-disqus';\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: any;\n        excerpt: string;\n        tags: string[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: any;\n    link: string;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n  };\n}\n\ninterface DisqusConfig {\n  url: string;\n  identifier: string;\n  title: string;\n}\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (post.frontmatter.image) {\n    width = getImage(post.frontmatter.image)?.width;\n    height = getImage(post.frontmatter.image)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  const disqusConfig: DisqusConfig = {\n    url: config.siteUrl + location.pathname,\n    identifier: location.pathname,\n    title: post.frontmatter.title,\n  };\n\n  return (\n    <IndexLayout className='post-template'>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name='description' content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property='og:site_name' content={config.title} />\n        <meta property='og:type' content='article' />\n        <meta property='og:title' content={post.frontmatter.title} />\n        <meta property='og:description' content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property='og:url' content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            property='og:image'\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta property='article:published_time' content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property='article:tag' content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property='article:publisher' content={config.facebook} />}\n        {config.facebook && <meta property='article:author' content={config.facebook} />}\n        <meta name='twitter:card' content='summary_large_image' />\n        <meta name='twitter:title' content={post.frontmatter.title} />\n        <meta name='twitter:description' content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name='twitter:url' content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            name='twitter:image'\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta name='twitter:label1' content='Written by' />\n        <meta name='twitter:label2' content='Filed under' />\n        {post.frontmatter.tags && <meta name='twitter:data2' content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name='twitter:site'\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name='twitter:creator'\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property='og:image:width' content={width?.toString()} />}\n        {height && <meta property='og:image:height' content={height?.toString()} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className='site-header'>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id='site-main' className='site-main' css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className='post-full-header'>\n                <PostFullTags className='post-card-primary-tag'>\n                  {\n                    post.frontmatter.tags && post.frontmatter.tags.length > 0 && post.frontmatter.tags.map((tag, index, arr) => (\n                      <Link key={tag} to={`/posts/tags/${_.kebabCase(tag)}/`}>\n                        <span>\n                          {tag}\n                          {index === arr.length - 1 || ', '}\n                        </span>\n                      </Link>\n                    ))\n                  }\n                </PostFullTags>\n                <PostFullTitle className='post-full-title'>{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className='post-full-custom-excerpt'>\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className='post-full-byline'>\n                  <section className='post-full-byline-content'>\n                    <section className='post-full-byline-meta'>\n                      <div className='byline-meta-content'>\n                        <time className='byline-meta-date' dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className='byline-reading-time'>\n                          <span className='bull'>&bull;</span>{post.fields.readingTime.text}\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.image)!}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title} />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n            <Disqus config={disqusConfig}/>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 50px 0px 0px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 400px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`query($slug: String, $primaryTag: String) {\n  markdownRemark(fields: { slug: { eq: $slug } }) {\n    html\n    htmlAst\n    excerpt\n    fields {\n      readingTime {\n        text\n      }\n    }\n    frontmatter {\n      title\n      userDate: date(formatString: \"D MMMM YYYY\")\n      date\n      tags\n      excerpt\n      image {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n  relatedPosts: allMarkdownRemark(\n    filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } }, fileAbsolutePath: {regex: \"/content/posts/\"}}\n    limit: 5\n    sort: { fields: [frontmatter___date], order: DESC }\n  ) {\n    totalCount\n    edges {\n      node {\n        id\n        excerpt\n        frontmatter {\n          title\n          date\n        }\n        fields {\n          readingTime {\n            text\n          }\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default PageTemplate;\n"],"names":["PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","HomeFullHeader","HomeFullTitle","lighten","setLightness","PostFullTags","PostFullCustomExcerpt","PostFullByline","PostFullTitle","PostFullImage","data","pageContext","location","_ref","post","markdownRemark","width","height","frontmatter","image","getImage","_getImage","_getImage2","date","Date","datetime","format","displayDatetime","disqusConfig","url","config","pathname","identifier","title","___EmotionJSX","IndexLayout","className","Helmet","lang","name","content","excerpt","property","getSrc","tags","_width","toString","_height","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","length","map","tag","index","arr","Link","key","to","_kebabCase","dateTime","fields","readingTime","text","GatsbyImage","style","alt","PostContent","htmlAst","Subscribe","Disqus","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}