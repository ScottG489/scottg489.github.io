{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["PostTemplate","css","colors","darkmode","PostFull","NoImage","PostFullHeader","HomeFullHeader","HomeFullTitle","lighten","lightgrey","setLightness","darkgrey","PostFullTags","midgrey","PostFullCustomExcerpt","PostFullByline","PostFullTitle","PostFullImage","query","PageTemplate","data","pageContext","location","post","markdownRemark","console","log","relatedPosts","width","height","frontmatter","image","childImageSharp","fluid","sizes","split","String","Number","aspectRatio","date","Date","datetime","format","displayDatetime","className","lang","config","title","name","content","excerpt","property","siteUrl","pathname","src","tags","facebook","twitter","outer","SiteNavMain","inner","isPost","id","SiteMain","length","map","tag","index","arr","key","to","_","dateTime","timeToRead","style","alt","htmlAst","showSubscribe","currentPageSlug"],"mappings":"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","file":"component---src-templates-post-tsx-d9037f243250e1e6ff2f.js","sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        excerpt: string;\n        tags: string[];\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n            layout: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    ghimage: string;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n  };\n}\n\nconst PageTemplate = ({ data, pageContext, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  console.log(data.relatedPosts);\n  const { relatedPosts } = data;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image?.childImageSharp) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-card-primary-tag\">\n                  {\n                    post.frontmatter.tags && post.frontmatter.tags.length > 0 && post.frontmatter.tags.map((tag, index, arr) => {\n                      return (\n                        <Link key={tag} to={`/tags/${_.kebabCase(tag)}/`}>\n                          <span>\n                            {tag}\n                            {index === arr.length - 1 || ', '}\n                          </span>\n                        </Link>\n                      );\n                    })\n                  }\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <section className=\"post-full-byline-meta\">\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span> {post.timeToRead} min read\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image?.childImageSharp && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 50px 0px 0px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 400px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"sourceRoot":""}