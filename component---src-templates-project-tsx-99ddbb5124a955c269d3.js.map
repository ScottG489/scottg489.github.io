{"version":3,"sources":["webpack:///./src/templates/project.tsx"],"names":["PostTemplate","css","colors","darkmode","ProjectImage","PostFull","NoImage","PostFullHeader","HomeFullHeader","HomeFullTitle","lighten","lightgrey","setLightness","darkgrey","PostFullTags","midgrey","PostFullCustomExcerpt","PostFullByline","PostFullTitle","query","PageTemplate","data","pageContext","location","post","markdownRemark","ghimage","title","frontmatter","width","height","image","childImageSharp","fluid","sizes","split","String","Number","aspectRatio","className","lang","config","name","content","excerpt","property","siteUrl","pathname","src","date","tags","facebook","twitter","outer","SiteNavMain","inner","isPost","id","SiteMain","length","map","tag","index","arr","key","to","_","href","target","rel","alt","htmlAst","showSubscribe","currentPageSlug","relatedPosts"],"mappings":"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","file":"component---src-templates-project-tsx-99ddbb5124a955c269d3.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        ghimage: string;\n        excerpt: string;\n        tags: string[];\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    ghimage: string;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n  };\n}\n\nconst PageTemplate = ({ data, pageContext, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  const { ghimage, title } = post.frontmatter;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image?.childImageSharp) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-card-primary-tag\">\n                  {\n                    post.frontmatter.tags && post.frontmatter.tags.length > 0 && post.frontmatter.tags.map((tag, index, arr) => {\n                      return (\n                        <Link key={tag} to={`/tags/${_.kebabCase(tag)}/`}>\n                          <span>\n                            {tag}\n                            {index === arr.length - 1 || ', '}\n                          </span>\n                        </Link>\n                      );\n                    })\n                  }\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\"/>\n              </PostFullHeader>\n\n              {ghimage && (\n                <ProjectImage>\n                  <a href={`https://github.com/ScottG489/${title}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={ghimage} alt={`${title} GitHub repo card`}/>\n                  </a>\n                </ProjectImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nconst ProjectImage = styled.div`\n  text-align: center;\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 0px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 50px 0px 0px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nexport const HomeFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        ghimage\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"sourceRoot":""}