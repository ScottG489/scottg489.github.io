{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-try-ghost/src/pages/404.js"],"names":["NotFoundPage","data","text","get","useLang","posts","allGhostPost","edges","basePath","useOptions","render","overlay","header","errorClass","className","to","map","i","node","key","id","post","num","pageQuery"],"mappings":"2FAAA,6HA0CeA,UAjCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAOC,YAAIC,eACXC,EAAQJ,EAAKK,aAAaC,MACxBC,EAAaC,cAAbD,SAER,OACI,wBAAC,IAAD,CAAkBE,OAAS,SAAAC,GAAO,OAC9B,wBAAC,IAAD,CAAQA,QAASA,EAASC,OAAQ,wBAAC,IAAD,CAAYD,QAASA,IAAYE,WAAW,iBAC1E,+BAAKC,UAAU,SACX,mCAASA,UAAU,iBACf,8BAAIA,UAAU,cAAd,OACA,6BAAGA,UAAU,qBAAqBZ,EAAK,mBACvC,wBAAC,OAAD,CAAMa,GAAIP,EAAUM,UAAU,cAAcZ,EAAK,mBAAjD,OAGJ,+BAAKY,UAAU,aACVT,EAAMW,KAAI,WAAYC,GAAZ,IAAGC,EAAH,EAAGA,KAAH,OACP,wBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,EAAMI,IAAKL,cAkB9D,IAAMM,EAAS","file":"component---node-modules-gatsby-theme-try-ghost-src-pages-404-js-93758daa2d18bfb2cab2.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport { Layout, HeaderPage, PostCard } from '../components/common'\nimport { OverlayContainer } from '../components/common/effects'\n\nimport useOptions from '../utils/use-options'\nimport { useLang, get } from '../utils/use-lang'\n\nconst NotFoundPage = ({ data }) => {\n    const text = get(useLang())\n    const posts = data.allGhostPost.edges\n    const { basePath } = useOptions()\n\n    return (\n        <OverlayContainer render={ overlay => (\n            <Layout overlay={overlay} header={<HeaderPage overlay={overlay}/>} errorClass=\"error-content\">\n                <div className=\"inner\">\n                    <section className=\"error-message\">\n                        <h1 className=\"error-code\">404</h1>\n                        <p className=\"error-description\">{text(`PAGE_NOT_FOUND`)}</p>\n                        <Link to={basePath} className=\"error-link\">{text(`GOTO_FRONT_PAGE`)} â†’</Link>\n                    </section>\n\n                    <div className=\"post-feed\">\n                        {posts.map(({ node } , i) => (\n                            <PostCard key={node.id} post={node} num={i} />\n                        ))}\n                    </div>\n\n                </div>\n            </Layout>\n        )}/>\n    )\n}\n\nNotFoundPage.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query GhostNotFoundQuery {\n    allGhostPost(\n        sort: { fields: [featured, published_at], order: [DESC, DESC] },\n        limit: 3,\n        skip: 0\n    ) {\n      edges {\n        node {\n          ...GhostPostFieldsForIndex\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}