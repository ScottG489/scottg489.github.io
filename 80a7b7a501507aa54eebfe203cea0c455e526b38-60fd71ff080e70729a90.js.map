{"version":3,"sources":["webpack:///./src/components/ProjectCard.tsx"],"names":["ProjectCard","post","large","ghimage","link","title","className","css","PostCardStyles","PostCardLarge","ProjectCardImage","href","target","rel","src","alt","PostCardContent","PostCardHeader","tags","length","map","tag","index","arr","key","to","PostCardContentText","PostCardTitle","PostCardExcerpt","excerpt","lighten","colors","lightgrey","darkmode","blue","midgrey","darkgrey"],"mappings":"8NAgBO,MAAMA,EAA0C,IAA4B,IAA3B,KAAEC,EAAF,MAAQC,GAAQ,GAAW,EACjF,MAAM,QAAEC,EAAF,KAAWC,GAASH,GACpB,MAAEI,GAAUJ,EAElB,OACE,uBACEK,UAAY,yBACVJ,EAAQ,kBAAoB,IAE9BK,IAAG,CAAGC,EAAgBN,GAASO,EAA5B,QAEFN,GACC,YAACO,EAAD,CAAkBC,KAAMP,EAAMQ,OAAO,SAASC,IAAI,uBAChD,mBAAKC,IAAKX,EAASY,IAAQV,EAAF,uBAG7B,YAACW,EAAD,CAAiBV,UAAU,qBACzB,YAACW,EAAD,CAAgBX,UAAU,oBAEtBL,EAAKiB,MAAQjB,EAAKiB,KAAKC,OAAS,GAAKlB,EAAKiB,KAAKE,IAAI,CAACC,EAAKC,EAAOC,IAE5D,YAAC,IAAD,CACEC,IAAKH,EAAKf,UAAU,wBACpBmB,GAAK,kBAAiB,IAAYJ,OAEjCA,EACAC,IAAUC,EAAIJ,OAAS,GAAK,QAMvC,YAACO,EAAD,CAAqBpB,UAAU,0BAC7B,YAACqB,EAAD,CAAerB,UAAU,mBAAmBL,EAAKI,OACjD,YAACuB,EAAD,CAAiBtB,UAAU,qBACzB,qBAAIL,EAAK4B,SAAW5B,EAAK4B,cAQ/BrB,EAAiBD,YAAH,+HAQSuB,YAAQ,OAAQC,IAAOC,WARhC,kFAaOF,YAAQ,OAAQC,IAAOE,UAb9B,SAiBdxB,EAAgBF,YAAH,okBAmDNwB,IAAOG,KAnDD,wFA2DblB,EAAkB,mBAAH,mBAAG,CAAH,0EAMfU,EAAsB,mBAAH,mBAAG,CAAH,wEAMnBC,EAAgB,kBAAH,mBAAG,CAAH,sKAUbC,EAAkB,uBAAH,mBAAG,CAAH,uEAKRE,YAAQ,MAAOC,IAAOI,SALd,gBASflB,EAAiB,sBAAH,mBAAG,CAAH,yFAQdP,EAAmB,iBAAH,mBAAG,CAAH,4CAeFoB,YAAQ,OAAQC,IAAOK,UAS3BN,YAAQ,MAAOC,IAAOC,WAKpBD,IAAOE","file":"80a7b7a501507aa54eebfe203cea0c455e526b38-60fd71ff080e70729a90.js","sourcesContent":["import { Link } from 'gatsby';\nimport _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport { ProjectContext } from '../templates/projects';\n\nexport interface ProjectCardProps {\n  post: ProjectContext;\n  large?: boolean;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({ post, large = true }) => {\n  const { ghimage, link } = post;\n  const { title } = post;\n\n  return (\n    <article\n      className={`post-card 'no-image' ${\n        large ? 'post-card-large' : ''\n      }`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      {ghimage && (\n        <ProjectCardImage href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={ghimage} alt={`${title} GitHub repo card`}/>\n        </ProjectCardImage>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <PostCardHeader className=\"post-card-header\">\n          {\n            post.tags && post.tags.length > 0 && post.tags.map((tag, index, arr) => {\n              return (\n                <Link\n                  key={tag} className=\"post-card-primary-tag\"\n                  to={`/projects/tags/${_.kebabCase(tag)}/`}\n                >\n                  {tag}\n                  {index === arr.length - 1 || ', '}\n                </Link>\n              );\n            })\n          }\n        </PostCardHeader>\n        <PostCardContentText className=\"post-card-content-link\">\n          <PostCardTitle className=\"post-card-title\">{post.title}</PostCardTitle>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </PostCardContentText>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 20px;\n  /* border-bottom: 1px solid color(var(--lightgrey) l(+12%)); */\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-bottom-color: color(var(--darkmode) l(+8%)); */\n    border-bottom-color: ${lighten('0.08', colors.darkmode)};\n  }\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n\n  .post-card-primary-tag {\n    margin: 0 0 0.2em;\n    /* color: var(--blue); */\n    color: ${colors.blue};\n    font-size: 1.2rem;\n    font-weight: 500;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentText = styled.div`\n  .post-card-content-link {\n    padding: 0 0 0 40px;\n  }\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  @media (min-width: 795px) {\n    margin: 15px 40px 0;\n  }\n\n  margin: 15px 0 0;\n`;\n\nconst ProjectCardImage = styled.a`\n  align-self: center;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n"],"sourceRoot":""}