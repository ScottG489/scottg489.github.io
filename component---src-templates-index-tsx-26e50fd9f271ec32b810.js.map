{"version":3,"file":"component---src-templates-index-tsx-26e50fd9f271ec32b810.js","mappings":"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","sources":["webpack://scottg489.github.io/./src/components/Pagination.tsx","webpack://scottg489.github.io/./src/templates/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/react';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nfunction Pagination({ currentPage, numPages }: PaginationProps) {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : `../${(currentPage - 1).toString()}`;\n  const nextPage = `../${(currentPage + 1).toString()}`;\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel='prev'>\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            className={i + 1 === currentPage ? 'active' : ''}\n            to={`/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel='next'>\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color 0.3s;\n    border: 2px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow: inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql, Link } from 'gatsby';\nimport { getSrc, getImage } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { HomeFullTitle, PageContext } from './post';\nimport { ProjectCard } from '../components/ProjectCard';\nimport styled from '@emotion/styled';\nimport { ProjectContext } from './projects';\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: any;\n    header: any;\n    posts: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    projects: {\n      edges: Array<{\n        node: ProjectContext;\n      }>;\n    };\n  };\n}\n\nfunction IndexPage({ data, pageContext }: IndexProps) {\n  const width = getImage(data.header)?.width;\n  const height = getImage(data.header)?.height;\n  const posts = data.posts.edges;\n  const projects = data.projects.edges;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name='description' content={config.description} />\n        <meta property='og:site_name' content={config.title} />\n        <meta property='og:type' content='website' />\n        <meta property='og:title' content={config.title} />\n        <meta property='og:description' content={config.description} />\n        <meta property='og:url' content={config.siteUrl} />\n        <meta property='og:image' content={`${config.siteUrl}${getSrc(data.header)}`} />\n        {config.facebook && <meta property='article:publisher' content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name='google-site-verification' content={config.googleSiteVerification} />\n        )}\n        <meta name='twitter:card' content='summary_large_image' />\n        <meta name='twitter:title' content={config.title} />\n        <meta name='twitter:description' content={config.description} />\n        <meta name='twitter:url' content={config.siteUrl} />\n        <meta name='twitter:image' content={`${config.siteUrl}${getSrc(data.header)}`} />\n        {config.twitter && (\n          <meta\n            name='twitter:site'\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property='og:image:width' content={width?.toString()} />\n        <meta property='og:image:height' content={height?.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className='site-header-background'\n          style={{\n            backgroundImage: `url('${getSrc(data.header)}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteNav />\n            <SiteHeaderContent className='site-header-content'>\n              <SiteTitle className='site-title'>\n                {data.logo ? (\n                  <img\n                    style={{ maxHeight: '200px' }}\n                    src={getSrc(data.logo)}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main id='site-main' css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <HomeContentHeader className='post-full-header'>\n              <Link to='/posts' css={HomeContentHeaderLink}>\n                <HomeFullTitle className='post-full-title'>\n                  Posts\n                </HomeFullTitle>\n              </Link>\n            </HomeContentHeader>\n            <div css={[PostFeed]}>\n              {posts.slice(0, 4).map((post, index) =>\n                // filter out drafts in production\n                (\n                  (post.node.frontmatter.draft !== true\n                    || process.env.NODE_ENV !== 'production') && (\n                    <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n                  )\n                ),\n              )}\n            </div>\n            <HomeContentHeader className='post-full-header'>\n              <Link to='/projects' css={HomeContentHeaderLink}>\n                <HomeFullTitle className='post-full-title'>\n                  Projects\n                </HomeFullTitle>\n              </Link>\n            </HomeContentHeader>\n            <div css={[PostFeed]}>\n              {projects.map(project => (<ProjectCard key={project.node.title} post={project.node} />))}\n            </div>\n          </div>\n        </main>\n        {pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={pageContext.currentPage}\n            numPages={pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\nquery blogPageQuery($skip: Int!, $limit: Int!) {\n  logo: file(relativePath: { eq: \"img/scott-logo.png\" }) {\n    childImageSharp {\n      gatsbyImageData(layout: FIXED)\n    }\n  }\n  header: file(relativePath: { eq: \"posts/img/blog-cover.png\" }) {\n    childImageSharp {\n      gatsbyImageData(width: 2000, quality: 100, layout: FIXED)\n    }\n  }\n  posts: allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n    filter: { frontmatter: { draft: { ne: true } }, fileAbsolutePath: {regex: \"/content/posts/\"} }\n    limit: $limit\n    skip: $skip\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          date\n          tags\n          draft\n          excerpt\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        excerpt\n        fields {\n          readingTime {\n            text\n          }\n          layout\n          slug\n        }\n      }\n    }\n  }\n  projects: allProjectsYaml {\n    edges {\n      node {\n        title\n        link\n        ghimage\n        excerpt\n        tags\n      }\n    }\n  }\n}\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin: 15px 40px 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport const HomeContentHeader = styled.header`\n  a:hover {\n    text-decoration: none;\n  }\n  position: relative;\n  margin: 0 auto;\n  padding: 50px 0px 0px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst HomeContentHeaderLink = css`\n  a:hover {\n    text-decoration: none;\n  }\n\n  h1:hover {\n    color: #26a6ed;\n  }\n`;\n\nexport default IndexPage;\n"],"names":["navCss","css","darken","colors","currentPage","numPages","_ref","isFirst","isLast","prevPage","toString","nextPage","___EmotionJSX","Link","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","HomeContentHeader","HomeContentHeaderLink","data","pageContext","width","getImage","header","_getImage","height","_getImage2","posts","edges","projects","IndexLayout","Helmet","lang","config","name","content","property","getSrc","Wrapper","outer","SiteHeader","SiteHeaderStyles","style","backgroundImage","inner","SiteNav","SiteHeaderContent","SiteTitle","logo","maxHeight","src","alt","SiteDescription","id","SiteMain","Posts","HomeFullTitle","PostFeed","slice","map","post","index","node","frontmatter","draft","PostCard","fields","slug","large","project","ProjectCard","title","Pagination","Footer"],"sourceRoot":""}