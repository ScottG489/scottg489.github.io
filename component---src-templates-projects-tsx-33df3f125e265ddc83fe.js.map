{"version":3,"file":"component---src-templates-projects-tsx-33df3f125e265ddc83fe.js","mappings":"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","sources":["webpack://scottg489.github.io/./src/components/Pagination.tsx","webpack://scottg489.github.io/./src/templates/projects.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/react';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 2px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteHeader,\n  SiteMain,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { HomeFullHeader, HomeFullTitle, PageContext } from './post';\nimport { ProjectCard } from '../components/ProjectCard';\n\nexport interface ProjectsProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    posts: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    projects: {\n      edges: Array<{\n        node: ProjectContext;\n      }>;\n    };\n  };\n}\n\nexport interface ProjectContext {\n  title: string;\n  post: string;\n  large: boolean;\n  link: string;\n  ghimage: string;\n  excerpt: string;\n  tags: string[];\n}\n\nconst ProjectsPage: React.FC<ProjectsProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n  const projects = props.data.projects.edges;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fixed.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteNav />\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={[inner, Posts]}>\n            <HomeFullHeader className=\"post-full-header\">\n              <HomeFullTitle className=\"post-full-title\">Projects</HomeFullTitle>\n            </HomeFullHeader>\n            <div css={[PostFeed]}>\n              {projects.map(project => {\n                return (<ProjectCard key={project.node.title} post={project.node} />);\n              })}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query projectsPageQuery {\n    logo: file(relativePath: { eq: \"img/scott-logo.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"posts/img/blog-cover.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 2000, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    projects: allProjectsYaml {\n      edges {\n        node {\n          title\n          link\n          ghimage\n          excerpt\n          tags\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin: 15px 40px 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default ProjectsPage;\n"],"names":["navCss","css","darken","colors","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","props","width","height","data","header","childImageSharp","fixed","projects","edges","lang","config","name","content","property","src","outer","SiteHeader","style","backgroundImage","inner","id","SiteMain","Posts","HomeFullHeader","HomeFullTitle","PostFeed","map","project","node","title","post","children","pageContext"],"sourceRoot":""}